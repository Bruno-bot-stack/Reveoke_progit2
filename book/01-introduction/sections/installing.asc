=== Instalar o Git

Antes de começar a usar o Git, tens que torná-lo disponível no teu computador.
Mesmo se ele já tiver sido instalado, é provavelmente uma boa idéia atualizar para a versão mais recente.
Podes instalá-lo como um pacote ou através de outro instalador, ou descarregar o código fonte e compilá-lo.

[NOTA]
====
Este livro foi escrito usando a versão *2.0.0 * do Git.
Embora a maioria dos comandos usados deve funcionar mesmo em versões antigas do Git, alguns deles podem não funcionar, ou podem agir de forma ligeiramente diferente se estiveres a usar uma versão mais antiga.
Como o Git é excelente para preservar compatibilidade com versões anteriores, qualquer versão após 2.0 deve funcionar muito bem.
====

==== Instalar no Linux

(((Linux, installing)))
Se desejas instalar o Git no Linux através de um instalador binário, podes geralmente fazê-lo através da ferramenta básica de gerir os pacotes que vem com a sua distribuição.
Se usares Fedora por exemplo (ou qualquer distro relacionado com RPM como RHEL ou CentOS), podes usar `dnf`:

[source,console]
----
$ sudo dnf install git-all
----

Se usares uma distribuição baseada em Debian como o Ubuntu, usa o `apt-get`:

[source,console]
----
$ sudo apt-get install git-all
----

Para mais opções de instruções de como instalar o Git em outros vários sistemas Unix, vê na página do Git, em http://git-scm.com/download/linux[].

==== Instalar no Mac

(((Mac, installing)))
Existem várias maneiras de instalar o Git num Mac.
O mais fácil é provavelmente instalar as ferramentas de linha de comando Xcode.(((Xcode)))
No Mavericks (10,9) ou acima, podes fazer isto simplesmente executando 'git' a partir do Terminal pela primeira vez.

[source,console]
----
$ git --version
----

Se não tiveres o Git instalado, ele irá pedir-te para instalá-lo.

Se quiseres uma versão mais atualizada, também podes instalá-lo através de um instalador binário.
Um instalador OSX Git é mantido e disponível para download no site do Git, pelo http://git-scm.com/download/mac[].

.Git macOS Installer.
image::images/git-osx-installer.png[Git macOS installer.]

Também podes instalá-lo como parte do instalador GitHub para Mac.
Sua ferramenta GUI Git tem uma opção para instalar as ferramentas de linha de comando.
Podes descarregar esta ferramenta a partir da página GitHub para Mac, em http://mac.github.com[].

==== Instalar no Windows

A compilação mais oficial está disponível para download no site do Git.
Basta ir ao http://git-scm.com/download/win[] e o download começará automaticamente.
Nota que este é um projeto chamado Git para Windows, que é algo separado do Git; para mais informações sobre isto, vai para https://git-for-windows.github.io/[].

Para fazer uma instalação automatizada, podes usar o https://chocolatey.org/packages/git[pacote Git do Chocolatey].
Nota que o pacote Chocolatey é mantido pela comunidade.

Outra forma fácil de obter Git instalada é através da instalação de GitHub para Windows.
O instalador inclui uma versão de linha de comando do Git, bem como a GUI.
Ele também funciona bem com o PowerShell, e configura o cache de credenciais sólidas e as devidas configurações CRLF.(((PowerShell))) (((CRLF))) (((credential caching)))
Vamos saber mais sobre isto um pouco mais tarde, por enquanto basta dizer que estas são coisas que deverias ter.
Podes descarregar da página GitHub para Windows, em http://windows.github.com[].

==== Instalar da Fonte

Algumas pessoas podem achar interessante instalar Git a partir da fonte, para ter a versão mais recente.
Os instaladores binários tendem a ficar um pouco atrás, embora após o Git ter amadurecido nos últimos anos, isto faz cada vez menos diferença.

Se quiseres instalar o Git a partir da fonte, precisas ter as seguintes bibliotecas das quais o Git depende: autotools, curl, zlib, openssl, expat, and libiconv.
Por exemplo, se estiveres num sistema que tem `dnf` (como o Fedora) ou `apt-get` (tal como um sistema baseado em Debian), podes usar um destes comandos para instalar as dependências mínimas para compilar e instalar os binários do Git:

[source,console]
----
$ sudo dnf install dh-autoreconf curl-devel expat-devel gettext-devel \
  openssl-devel perl-devel zlib-devel
$ sudo apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev \
  gettext libz-dev libssl-dev
----

Para poder adicionar a documentação em vários formatos (doc, html, info), estas dependências adicionais são necessárias (Nota: os utilizadores de RHEL e RHEL-derivados como CentOS e Scientific Linux terão que https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F[habilita o repositório EPEL] para descarregar o `docbook2X` pacote):

[source,console]
----
$ sudo dnf install asciidoc xmlto docbook2X getopt
$ sudo apt-get install asciidoc xmlto docbook2x getopt
----

Além disso, se estiver usando o Fedora/RHEL/derivados-do-RHEL, vais precisar de fazer isto

[source,console]
----
$ sudo ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi
----

devido a diferenças nos nomes dos binários.

Quando tiveres todas as dependências necessárias, poderás descarregar o tarball com a última versão de vários lugares.
Podes obtê-lo através da página kernel.org, em https://www.kernel.org/pub/software/scm/git[], ou no espelho no site do GitHub, em https://github.com/git/git/releases[].
Em geral, é um pouco mais claro qual é a versão mais recente na página do GitHub, mas a página kernel.org também tem assinaturas se tu quiseres verificar o teu download.

Então, compila e instala:

[source,console]
----
$ tar -zxf git-2.0.0.tar.gz
$ cd git-2.0.0
$ make configure
$ ./configure --prefix=/usr
$ make all doc info
$ sudo make install install-doc install-html install-info
----

Depois de teres feito isto, poderás atualizar o Git através dele mesmo:

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
----
