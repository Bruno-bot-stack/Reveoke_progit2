[[_git_powershell]]
=== Git no Powershell

(((powershell)))(((tab completion, powershell)))(((shell prompts, powershell)))
(((posh-git)))
O terminal de linha de comando padrão no Windows (`cmd.exe`) não é realmente capaz de uma experiência Git personalizada, mas se tu estiveres a usar o Powershell, tu estás com sorte.
Um pacote chamado Posh-Git (https://github.com/dahlbyk/posh-git[]) fornece poderosas instalações de preenchimento de tabulações, bem como um prompt aprimorado para ajudá-lo a permanecer em cima do status do teu repositório.
Parece-se com isto:

.Powershell with Posh-git.
image::images/posh-git.png[Powershell with Posh-git.]

==== Instalação
===== Pré-requisitos
Antes de podere executar scripts do PowerShell na tua máquina, precisas de configurar o teu Local ExecutionPolicy para RemoteSigned (Basicamente, qualquer coisa exceto indefinido e restrito). Se tu escolheres AllSigned em vez de RemoteSigned, os scripts locais (os teus próprios) precisam ser assinados digitalmente para serem executados. Com o RemoteSigned, somente Scripts com o "ZoneIdentifier" configurado para Internet (foram descarregados da web) precisam ser assinados, outros não.
Se és um administrador e desejas configurá-lo para todos os Utilizadores nesta máquina, usa "-Scope LocalMachine".
Se és um utilizador normal, sem direitos administrativos, podes usar "-Scope CurrentUser" para configurá-lo apenas para ti.
Mais sobre PowerShell Scopes: (https://technet.microsoft.com/de-de/library/hh847849.aspx[])
Mais sobre PowerShell ExecutionPolicy: (https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-executionpolicy[])

[source,powershell]
-----
> Set-ExecutionPolicy -Scope LocalMachine -ExecutionPolicy RemoteSigned -Force
-----

===== Galeria PowerShell
Se tu tiveres pelo menos o PowerShell 5 ou o PowerShell 4 com o PackageManagement instalado, podes usar o gestor de pacotes para obteres para ti o Posh-Git.
Mais informações sobre os requisitos: (https://docs.microsoft.com/en-us/powershell/gallery/psget/get_psget_module[])
[source,powershell]
-----
> Update-Module PowerShellGet -Force
> Install-Module Posh-Git -Scope LocalMachine
-----
Se quiseres instalar o Posh-Git apenas para o utilizador atual e não globalmente, usa em vez disso o "-Scope CurrentUser".

===== Atualiza o Prompt do PowerShell
Para incluir as informações git no teu prompt, ele precisa de ser importado. Para fazeres isto automaticamente, inclui a declaração de importação no teu script de $perfil. Este script é executado toda vez que tu abres um novo prompt do PowerShell.
Tem em mente que existem múltiplos scripts de $perfil. Por exemplo: um para a console e outro para o ISE.
[source,powershell]
-----
> 'Import-Module Posh-Git' | Out-File -Append -Encoding default -FilePath $profile
-----

===== Da Fonte
Basta descarregares uma versão Posh-Git de (https://github.com/dahlbyk/posh-git[]) e descompactá-la no diretório `WindowsPowershell`.
Em seguida, abre um prompt Powershell como administrador e faz isto:
[source,powershell]
-----
> cd ~\Documents\WindowsPowerShell\Module\posh-git
> .\install.ps1
-----

Isto irá adicionar a linha adequada ao teu arquivo `profile.ps1`, e o Posh-git estará ativo na próxima vez que tu abrires o teu prompt.
