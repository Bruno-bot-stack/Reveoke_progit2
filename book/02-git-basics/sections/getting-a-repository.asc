[[_getting_a_repo]]
=== Obtendo um Repositório Git

Tu normalmente obtens um repositório Git de duas maneiras:

1. Tu podes pegar num diretório local que atualmente não está sob controle da versão, e transformá-lo num repositório Git, ou
2. Tu podes _clonas_ um repositório Git existente em qualquer outro local.

Em ambos os casos, acabas com um repositório Git na tua máquina local, pronto para o trabalho.

==== Inicializando um Repositório num Diretório Existente

Se tens um diretório de projeto que atualmente não está sob o controle da versão e desejas começar a controlá-lo com o Git, primeiro precisas de ir para o diretório deste projeto
Se nunca fizeste isto, parece um pouco diferente, dependendo do sistema que tu estás a executar:

para o Linux:
[source,console]
----
$ cd /home/user/my_project
----
para o Mac:
[source,console]
----
$ cd /Users/user/my_project
----
para o Windows:
[source,console]
----
$ cd /c/user/my_project
----

e digita:

[source,console]
----
$ git init
----

Isto cria um novo subdiretório chamado `.git` que contém todos os teus arquivos de repositório necessários -- um esqueleto de depósito Git.
Neste ponto, nada no teu projeto ainda é rastreado.
(Vê <<ch10-git-internals#ch10-git-internals>> para obter mais informações sobre quais os arquivos que exatamente se encontram contidos no diretório `.git` que tu acabaste de criar.)((((comandos git, init)))

Se tu quiseres iniciar a versão - controlando os arquivos existentes (em oposição a um diretório vazio), provavelmente tu deverás começar a rastrear estes arquivos e fazer um commit inicial.
Podes conseguir isto com alguns comandos `git add` que especificam os arquivos que desejas acompanhar, seguidos de `git commit`:

[source,console]
----
$ git add *.c
$ git add LICENSE
$ git commit -m 'initial project version'
----

Examinaremos o que estes comandos fazem em apenas um minuto.
Neste ponto, tens um repositório Git com arquivos rastreados e um commit inicial.

[[_git_cloning]]
==== Clonar um Repositório Existente

Se tu quiseres obter uma cópia de um repositório Git existente - por exemplo, um projeto ao qual tu gostarias de contribuir - o comando que precisas é `git clone`.
Se tu estiveres familiarizado com outros sistemas VCS, como o Subversion, notarás que o comando é o "clone" e não o "checkout".
Esta é uma distinção importante -- em vez de obteres apenas uma cópia de trabalho, o Git recebe uma cópia completa de quase todos os dados que o servidor possui.
A versão muito completa de cada arquivo para o histórico do projeto é puxada para baixo por padrão quando executas o `clipe git '.
De fato, se o teu disco do servidor estiver corrompido, podes usar quase qualquer um dos clones em qualquer cliente para configurar o servidor de volta ao estado em que se encontrava quando foi clonado (podes perder alguns ganchos do lado do servidor e tal, mas Todos os dados versionados estarão lá -- vê <<ch04-git-on-the-server#_getting_git_on_a_server>> para mais detalhes).

Tu clonas um repositório com `git clone <url>`.(((Comandos git, clone)))
Por exemplo, se tu quiseres clonar a biblioteca Git vinculável chamada `libgit2`, podes fazê-lo assim:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2
----

Isto cria um diretório chamado `libgit2`, inicializa um diretório '.git` dentro dele, retira todos os dados deste repositório e verifica uma cópia de trabalho da versão mais recente.
Se tu entrares no novo diretório `libgit2` que acabou de ser criado, verás os arquivos do projeto lá, prontos para serem trabalhados ou usados.

Se tu quiseres clonar o repositório num diretório chamado algo diferente de `libgit2`, podes especificar isto como a próxima opção da linha de comando:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2 mylibgit
----

Este comando faz o mesmo que o anterior, mas o diretório de destino é chamado `mylibgit`.

O Git possui vários protocolos de transferência diferentes que tu podes usar.
O exemplo anterior usa o protocolo `https://`, mas tu também podes ver `git://` ou `user@server:path/to/repo.git`, que usa o protocolo de transferência SSH.
<<ch04-git-on-the-server#_getting_git_on_a_server>> apresentará todas as opções disponíveis que o servidor pode configurar para aceder ao teu repositório Git e os prós e contras de cada um.
